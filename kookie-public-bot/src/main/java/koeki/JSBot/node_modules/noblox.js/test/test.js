/* global describe, it, beforeEach */
const cookie = '_|WARNING:-DO-NOT-SHARE-THIS.--Sharing-this-will-allow-someone-to-log-in-as-you-and-to-steal-your-ROBUX-and-items.|_E1B8D5D60C50595A55B4E2728CD776BD139314C24E52C06A4E4E8A5453103F63DFDADD2B93CA135AB7C987041F85BEA3AFF56D3800133B1B42C0989D91AC6CD88CD8590A86A4C80BB93EB6167D6FA5F5FFF2FE48B5EBBB4238ED68532FA8428E6468432D2625738D53DBF05B8A30F7DD5BEA1410C132409329E6425924878C15C0964592C85DAFE2C0ACFA0CAE093279249246D0EE3E792434501C2C6380D0CE5CCC17A77DE5FED85B841C7CF92D92429C18B66794BC510E0A03E8473A09B4F48174CE0BF765ACCD74AC2F919DADA677961576EE9B5FB87B4AA08A808279B31B4B54A4CDB1AD97CFE3D0EB36D7A0A1520F56855FDE6FDC8E9C883A9D0779E709B636BFD195222AFA58E3EA2A398C904BDA736077AF16AEA60AD887A08499B7D8A9FC760D'
const nbx = require('../lib')

const chai = require('chai')
chai.use(require('chai-as-promised'))

const expect = chai.expect

describe('Log in', async function () {
  describe('#cookieLogin()', function () {
    it('should login successfully', async function () {
      const res = await nbx.cookieLogin(cookie)
      expect(res).to.include.keys(['UserID', 'UserName', 'RobuxBalance', 'ThumbnailUrl', 'IsAnyBuildersClubMember'])
      // expect(res).to.have.key('UserID').and.to.have.key('IsPremium').and.to.have.key('RobuxBalance')
    })
  })
})

beforeEach(async function () {
  return nbx.cookieLogin(cookie)
})

describe('Follow Feature', function () {
  describe('#follow()', function () {
    it('should return true when the follow is valid', async function () {
    })

    it('should throw error when the follow is not valid', async function () {
      // const res = await nbx.follow(0)
      expect(nbx.follow(0)).to.eventually.be.rejectedWith('Target user does not exist.')
    })
  })
})

describe('Group Functions', function () {
  describe('#demote()', async function () {
    it('should demote a user on roblox successfully', async function () {
      const res = await nbx.demote(4591072, 89766922)
      expect(res).to.include.keys(['newRole', 'oldRole'])
    })
  })
  describe('#promote()', async function () {
    it('should promote a user on roblox successfully', async function () {
      const res = await nbx.promote(4591072, 89766922)
      expect(res).to.include.keys(['newRole', 'oldRole'])
    })
  })
})
// async function run () {
//   await nbx.cookieLogin(cookie)
//   console.log('group roles: ' ,await nbx.getRoles(4591072))
//   console.log('groupholder: ', await nbx.getRole({ group: 4591072, name: 'Group Holder' }).catch(console.error))
//   // console.log(await nbx.getRoles(4591072))
//   // nbx.demote(4591072, 756798962).then((obj) => {
//   //   console.log(obj)
//   // }).catch(console.error)
//   nbx.follow(5558238283).then(console.log).catch(console.error)
// }

// run()
